// 1
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
            compatible = "zmk,combos";
            combo_esc {
                timeout-ms = <50>;
                key-positions = <0 1>;
                bindings = <&kp ESC>;
            };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                    bindings = <
           &mt ESC Q    &kp W  &kp E     &kp R  &kp T           &kp Y    &kp U            &kp I      &kp O    &kp P           
           &mt LCTRL A  &kp S  &kp D     &kp F  &kp G           &kp H    &kp J            &kp K      &kp L    &kp SEMI        
&kp LSHFT  &kp Z        &kp X  &kp C     &kp V  &kp B           &kp N    &kp M            &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                               &kp LGUI  &mo 1  &mt TAB SPACE   &kp RET  &lt 2 BACKSPACE  &kp RALT
                    >;
                };

                lower_layer {
                    bindings = <
           &kp N1        &kp N2        &kp N3        &kp N4        &kp N5              &kp N6     &kp N7           &kp N8              &kp N9     &kp N0     
           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &kp GRAVE  &LEFT            &kp UP              &kp RIGHT  &kp SQT    
&kp LSHFT  &none         &none         &none         &none         &none               &kp TILDE  &kp LEFT         &kp DOWN            &kp RIGHT  &kp DQT  &kp RSHFT
                                       &kp LGUI      &trans        &mt TAB SPACE       &kp RET    &lt 3 BACKSPACE  &mt RALT BACKSPACE
                    >;
                };

                raise_layer {
                    bindings = <
           &kp EXCL   &kp AT  &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET  &kp AMPS   &kp ASTRK           &kp LPAR  &kp RPAR  
           &none      &none   &none     &none     &none               &kp MINUS  &kp EQUAL  &kp LBKT            &kp RBKT  &kp BSLH  
&kp LSHFT  &none      &none   &none     &none     &none               &kp UNDER  &kp PLUS   &kp LBRC            &kp RBRC  &kp PIPE  &kp RSHFT
                              &kp LGUI  &mo 3     &mt TAB SPACE       &kp RET    &trans     &mt RALT BACKSPACE
                    >;
                };

                func_layer {
                    bindings = <
           &kp F1         &kp F2         &kp F3         &kp F4         &kp F5               &kp F6   &kp F7  &kp F8              &kp F9   &kp F10  
           &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4        &none    &none   &none               &kp F11  &kp F12  
&kp LSHFT  &none          &none          &none          &bt BT_CLR     &bt BT_CLR_ALL       &none    &none   &kp LT              &kp GT   &none    &kp RSHFT
                                         &kp LGUI       &trans         &mt TAB SPACE        &kp RET  &trans  &mt RALT BACKSPACE
                    >;
               };
        };
};
